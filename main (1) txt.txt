@@ -0,0 +1,66 @@

‏Line
1
‏added
  +  
import subprocess

‏Line
2
‏added
  +  
import sys

‏Line
3
‏added
  +  


‏Line
4
‏added
  +  
libraries = [

‏Line
5
‏added
  +  
    "pydantic",

‏Line
6
‏added
  +  
    "groq",

‏Line
7
‏added
  +  
    "instructor"

‏Line
8
‏added
  +  
]

‏Line
9
‏added
  +  


‏Line
10
‏added
  +  
for library in libraries:

‏Line
11
‏added
  +  
    subprocess.check_call([sys.executable, "-m", "pip", "install", library])

‏Line
12
‏added
  +  


‏Line
13
‏added
  +  
print("Libraries installed successfully!")

‏Line
14
‏added
  +  


‏Line
15
‏added
  +  
import os

‏Line
16
‏added
  +  
from pydantic import BaseModel, Field  

‏Line
17
‏added
  +  
from typing import List

‏Line
18
‏added
  +  
from groq import Groq

‏Line
19
‏added
  +  
import instructor

‏Line
20
‏added
  +  


‏Line
21
‏added
  +  
class TopicInfo(BaseModel):

‏Line
22
‏added
  +  
    title: str

‏Line
23
‏added
  +  
    details: List[str] = Field(..., description="Key facts about the topic")

‏Line
24
‏added
  +  


‏Line
25
‏added
  +  
def get_topic_input():

‏Line
26
‏added
  +  
    return input("Enter a topic to learn about (or 'exit' to quit): ")

‏Line
27
‏added
  +  


‏Line
28
‏added
  +  
def run(topic_name):

‏Line
29
‏added
  +  
    # Hardcoding the API key (Not recommended for production)

‏Line
30
‏added
  +  
    api_key = "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"

‏Line
31
‏added
  +  


‏Line
32
‏added
  +  
    if not api_key:

‏Line
33
‏added
  +  
        print("API Key is not set. Please set the GROQ_API_KEY environment variable.")

‏Line
34
‏added
  +  
        return

‏Line
35
‏added
  +  


‏Line
36
‏added
  +  
    api_client = Groq(

‏Line
37
‏added
  +  
        api_key=api_key,

‏Line
38
‏added
  +  
    )

‏Line
39
‏added
  +  


‏Line
40
‏added
  +  
    instructor_client = instructor.from_groq(api_client, mode=instructor.Mode.TOOLS)

‏Line
41
‏added
  +  


‏Line
42
‏added
  +  
    response = instructor_client.chat.completions.create(

‏Line
43
‏added
  +  
        model="mixtral-8x7b-32768",

‏Line
44
‏added
  +  
        messages=[

‏Line
45
‏added
  +  
            {

‏Line
46
‏added
  +  
                "role": "user",

‏Line
47
‏added
  +  
                "content": f"Tell me about {topic_name}",

‏Line
48
‏added
  +  
            }

‏Line
49
‏added
  +  
        ],

‏Line
50
‏added
  +  
        response_model=TopicInfo,

‏Line
51
‏added
  +  
    )

‏Line
52
‏added
  +  


‏Line
53
‏added
  +  
    print(response.model_dump_json(indent=2))

‏Line
54
‏added
  +  


‏Line
55
‏added
  +  
if __name__ == "__main__":

‏Line
56
‏added
  +  
    while True:

‏Line
57
‏added
  +  
        topic_input = get_topic_input()

‏Line
58
‏added
  +  
        if topic_input.lower() == 'exit':

‏Line
59
‏added
  +  
            break

‏Line
60
‏added
  +  
        run(topic_input)
